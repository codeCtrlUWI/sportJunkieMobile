
    private GoogleApiClient mGoogleApiClient;
    private FirebaseAuth mAuth;
    private FirebaseAuth.AuthStateListener mAuthStateListener;


        /*The Reason the Google Code was added, was for the sign out function, in the case where the sign out button is clicked,
        * my intention was to have the user to actually sign out of the google out and just the firebase instance,
        * so therefore, when they do click sign in with Google, it brings back up the options to select whereas, if i didn't do it,
        * and they tapped the google sign in button, it would just sign them back in without prompt*/

        GoogleSignInOptions googleSignInOptions = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(getString(R.string.default_web_client_id))
                .requestEmail()
                .build();
        mGoogleApiClient = new GoogleApiClient.Builder(this)
                .enableAutoManage(this, this)
                .addApi(Auth.GOOGLE_SIGN_IN_API, googleSignInOptions)
                .build();

        findViewById(R.id.signout).setOnClickListener(this);

        mAuth = FirebaseAuth.getInstance();
        mAuthStateListener = new FirebaseAuth.AuthStateListener()
        {
            @Override
            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth)
            {
                FirebaseUser user = firebaseAuth.getCurrentUser();
                if (user != null)
                {
                    Log.d(TAG, "onAuthStateChanged: User is Signed In: " + user.getEmail());
                }
                else
                {
                    Intent intent = new Intent(getApplicationContext(), LandingActivity.class);
                    startActivity(intent);
                    Log.d(TAG, "onAuthStateChanged: User Is Not Signed In");
                }
            }
        };

        private void signOut()
            {
                Log.d(TAG, "signOut: called");
                mAuth.signOut();


                Auth.GoogleSignInApi.signOut(mGoogleApiClient)
                        .setResultCallback(new ResultCallback<Status>()
                        {
                            @Override
                            public void onResult(@NonNull Status status)
                            {
                                Log.d(TAG, "onResult: " + status.getStatus().toString());
                            }
                        });
            }



    @Override
    public void onConnectionFailed(@NonNull ConnectionResult connectionResult)
    {
        Log.d(TAG, "onConnectionFailed: " + connectionResult.toString());
        Toast.makeText(getApplicationContext(), "Google Error", Toast.LENGTH_LONG).show();
    }